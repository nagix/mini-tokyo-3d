{"version":3,"file":"mt3d-plugin-fireworks.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import {Marker, THREE} from 'mini-tokyo-3d';\nimport vertexShader from './vertex-shader.glsl';\nimport fragmentShader from './fragment-shader.glsl';\nimport fireworksSVG from './fireworks.svg';\nimport './fireworks.css';\n\n// Fireworks event URL\nconst FIRWORKS_URL = 'https://mini-tokyo.appspot.com/fireworks';\n\n// Data refresh interval (5 minutes)\nconst DATA_INTERVAL = 300000;\n\n// Activity refresh interval (1 minute)\nconst ACTIVITY_INTERVAL = 60000;\n\n// Fireworks refresh interval (100 msecs)\nconst FIREWORKS_INTERVAL = 100;\n\nconst {\n    AdditiveBlending,\n    BufferGeometry,\n    DynamicDrawUsage,\n    Float32BufferAttribute,\n    Group,\n    MathUtils,\n    Points,\n    RawShaderMaterial,\n    CanvasTexture,\n    Vector3\n} = THREE;\n\nfunction clamp(value, lower, upper) {\n    return Math.min(Math.max(value, lower), upper);\n}\n\nfunction createElement(tagName, attributes, container) {\n    const element = document.createElement(tagName);\n\n    Object.assign(element, attributes);\n    if (container) {\n        container.appendChild(element);\n    }\n    return element;\n}\n\nfunction callAndSetInterval(fn, interval) {\n    fn();\n    return setInterval(fn, interval);\n}\n\nconst friction = 0.998;\nconst textureSize = 128.0;\nconst particleSize = 300;\n\nconst getOffsetXYZ = i => {\n    const offset = 3;\n    const index = i * offset;\n    const x = index;\n    const y = index + 1;\n    const z = index + 2;\n\n    return {x, y, z};\n};\n\nconst getOffsetRGBA = i => {\n    const offset = 4;\n    const index = i * offset;\n    const r = index;\n    const g = index + 1;\n    const b = index + 2;\n    const a = index + 3;\n\n    return {r, g, b, a};\n};\n\nconst getRandomNum = (max = 0, min = 0) => Math.floor(Math.random() * (max + 1 - min)) + min;\n\nconst drawRadialGradation = (ctx, canvasRadius, canvasW, canvasH) => {\n    ctx.save();\n    const gradient = ctx.createRadialGradient(canvasRadius, canvasRadius, 0, canvasRadius, canvasRadius, canvasRadius);\n    gradient.addColorStop(0.0, 'rgba(255,255,255,1.0)');\n    gradient.addColorStop(0.5, 'rgba(255,255,255,0.5)');\n    gradient.addColorStop(1.0, 'rgba(255,255,255,0)');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvasW, canvasH);\n    ctx.restore();\n};\n\nconst getTexture = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    const diameter = textureSize;\n    canvas.width = diameter;\n    canvas.height = diameter;\n    const canvasRadius = diameter / 2;\n\n    /* gradation circle\n    ------------------------ */\n    drawRadialGradation(ctx, canvasRadius, canvas.width, canvas.height);\n    return new CanvasTexture(canvas);\n};\n\nconst canvasTexture = getTexture();\n\nconst getPointMesh = (num, vels, type) => {\n    // geometry\n    const bufferGeometry = new BufferGeometry();\n    const vertices = [];\n    const velocities = [];\n    const colors = [];\n    const adjustSizes = [];\n    const masses = [];\n    const colorType = Math.random() > 0.3 ? 'single' : 'multiple';\n    const singleColor = getRandomNum(100, 20) * 0.01;\n    const multipleColor = () => getRandomNum(100, 1) * 0.01;\n    let rgbType;\n    const rgbTypeDice = Math.random();\n\n    if (rgbTypeDice > 0.66) {\n        rgbType = 'red';\n    } else if (rgbTypeDice > 0.33) {\n        rgbType = 'green';\n    } else {\n        rgbType = 'blue';\n    }\n    for (let i = 0; i < num; i++) {\n        const pos = new Vector3(0, 0, 0);\n\n        vertices.push(pos.x, pos.y, pos.z);\n        velocities.push(vels[i].x, vels[i].y, vels[i].z);\n        if (type === 'seed') {\n            let size;\n\n            if (type === 'trail') {\n                size = Math.random() * 0.1 + 0.1;\n            } else {\n                // size = Math.pow(vels[i].z, 2) * 0.04;\n                size = Math.random() * 0.1 + 0.1;\n            }\n            if (i === 0) {\n                size *= 1.1;\n            }\n            adjustSizes.push(size * 5);\n            masses.push(size * 0.017);\n            colors.push(1.0, 1.0, 1.0, 1.0);\n        } else {\n            const size = getRandomNum(particleSize, 10) * 0.001;\n\n            adjustSizes.push(size * 5);\n            masses.push(size * 0.017);\n            if (colorType === 'multiple') {\n                colors.push(multipleColor(), multipleColor(), multipleColor(), 1.0);\n            } else {\n                switch (rgbType) {\n                case 'red':\n                    colors.push(singleColor, 0.1, 0.1, 1.0);\n                    break;\n                case 'green':\n                    colors.push(0.1, singleColor, 0.1, 1.0);\n                    break;\n                case 'blue':\n                    colors.push(0.1, 0.1, singleColor, 1.0);\n                    break;\n                default:\n                    colors.push(singleColor, 0.1, 0.1, 1.0);\n                }\n            }\n        }\n    }\n    bufferGeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3).setUsage(DynamicDrawUsage));\n    bufferGeometry.setAttribute('velocity', new Float32BufferAttribute(velocities, 3).setUsage(DynamicDrawUsage));\n    bufferGeometry.setAttribute('color', new Float32BufferAttribute(colors, 4).setUsage(DynamicDrawUsage));\n    bufferGeometry.setAttribute('adjustSize', new Float32BufferAttribute(adjustSizes, 1).setUsage(DynamicDrawUsage));\n    bufferGeometry.setAttribute('mass', new Float32BufferAttribute(masses, 1).setUsage(DynamicDrawUsage));\n\n    // material\n    const shaderMaterial = new RawShaderMaterial({\n        uniforms: {\n            size: {\n                type: 'f',\n                value: textureSize\n            },\n            texture: {\n                type: 't',\n                value: canvasTexture\n            }\n        },\n        transparent: true,\n        // Display of \"blending: THREE.AdditiveBlending\" does not work properly if \"depthWrite\" property is set to true.\n        // Therefore, it is necessary to make it false in the case of making the image transparent by blending.\n        depthWrite: false,\n        blending: AdditiveBlending,\n        vertexShader,\n        fragmentShader\n    });\n\n    return new Points(bufferGeometry, shaderMaterial);\n};\n\nclass ParticleMesh {\n\n    constructor(scale, num, vels, type) {\n        this.scale = scale;\n        this.particleNum = num;\n        this.timerStartFading = 10;\n        this.mesh = getPointMesh(num, vels, type);\n    }\n\n    update(gravity, frameRateFactor) {\n        if (this.timerStartFading > 0) {\n            this.timerStartFading -= 0.3;\n        }\n\n        const {position, velocity, color, mass} = this.mesh.geometry.attributes;\n        const decrementRandom = () => (Math.random() > 0.5 ? 0.98 : 0.96);\n        const decrementByVel = v => (Math.random() > 0.5 ? 0 : (1 - v) * 0.1);\n\n        for (let i = 0; i < this.particleNum; i++) {\n            const {x, y, z} = getOffsetXYZ(i);\n\n            velocity.array[z] += gravity.z - mass.array[i] * this.scale * frameRateFactor;\n            velocity.array[x] *= 1 - ((1 - friction) * frameRateFactor);\n            velocity.array[y] *= 1 - ((1 - friction) * frameRateFactor);\n            velocity.array[z] *= 1 - ((1 - friction) * frameRateFactor);\n            position.array[x] += velocity.array[x] * frameRateFactor;\n            position.array[y] += velocity.array[y] * frameRateFactor;\n            position.array[z] += velocity.array[z] * frameRateFactor;\n\n            const {a} = getOffsetRGBA(i);\n\n            if (this.timerStartFading <= 0) {\n                color.array[a] *= 1 - ((1 - (decrementRandom() - decrementByVel(color.array[a]))) * frameRateFactor);\n                if (color.array[a] < 0.001) {\n                    color.array[a] = 0;\n                }\n            }\n        }\n        position.needsUpdate = true;\n        velocity.needsUpdate = true;\n        color.needsUpdate = true;\n    }\n\n    disposeAll() {\n        this.mesh.geometry.dispose();\n        this.mesh.material.dispose();\n    }\n\n}\n\nclass ParticleSeedMesh extends ParticleMesh {\n\n    constructor(scale, num, vels) {\n        super(scale, num, vels, 'seed');\n    }\n\n    update(gravity, frameRateFactor) {\n        const {position, velocity, color, mass} = this.mesh.geometry.attributes;\n        const decrementRandom = () => (Math.random() > 0.3 ? 0.99 : 0.96);\n        const decrementByVel = v => (Math.random() > 0.3 ? 0 : (1 - v) * 0.1);\n        const shake = () => (Math.random() > 0.5 ? 0.05 : -0.05) * this.scale * frameRateFactor;\n        const dice = () => Math.random() > 0.1;\n        const _f = friction * 0.98;\n\n        for (let i = 0; i < this.particleNum; i++) {\n            const {x, y, z} = getOffsetXYZ(i);\n\n            velocity.array[z] += gravity.z - mass.array[i] * this.scale * frameRateFactor;\n            velocity.array[x] *= 1 - ((1 - _f) * frameRateFactor);\n            velocity.array[y] *= 1 - ((1 - _f) * frameRateFactor);\n            velocity.array[z] *= 1 - ((1 - _f) * frameRateFactor);\n            position.array[x] += velocity.array[x] * frameRateFactor;\n            position.array[y] += velocity.array[y] * frameRateFactor;\n            position.array[z] += velocity.array[z] * frameRateFactor;\n            if (dice()) {\n                position.array[x] += shake();\n            }\n            if (dice()) {\n                position.array[y] += shake();\n            }\n\n            const {a} = getOffsetRGBA(i);\n\n            color.array[a] *= 1 - ((1 - (decrementRandom() - decrementByVel(color.array[a]))) * frameRateFactor);\n            if (color.array[a] < 0.001) {\n                color.array[a] = 0;\n            }\n        }\n        position.needsUpdate = true;\n        velocity.needsUpdate = true;\n        color.needsUpdate = true;\n    }\n\n}\n\nclass ParticleTailMesh extends ParticleMesh {\n\n    constructor(scale, num, vels) {\n        super(scale, num, vels, 'trail');\n    }\n\n    update(gravity, frameRateFactor) {\n        const {position, velocity, color, mass} = this.mesh.geometry.attributes;\n        const decrementRandom = () => (Math.random() > 0.3 ? 0.98 : 0.95);\n        const shake = () => (Math.random() > 0.5 ? 0.05 : -0.05) * this.scale * frameRateFactor;\n        const dice = () => Math.random() > 0.2;\n\n        for (let i = 0; i < this.particleNum; i++) {\n            const {x, y, z} = getOffsetXYZ(i);\n\n            velocity.array[z] += gravity.z - mass.array[i] * this.scale * frameRateFactor;\n            velocity.array[x] *= 1 - ((1 - friction) * frameRateFactor);\n            velocity.array[y] *= 1 - ((1 - friction) * frameRateFactor);\n            velocity.array[z] *= 1 - ((1 - friction) * frameRateFactor);\n            position.array[x] += velocity.array[x] * frameRateFactor;\n            position.array[y] += velocity.array[y] * frameRateFactor;\n            position.array[z] += velocity.array[z] * frameRateFactor;\n            if (dice()) {\n                position.array[x] += shake();\n            }\n            if (dice()) {\n                position.array[y] += shake();\n            }\n\n            const {a} = getOffsetRGBA(i);\n\n            color.array[a] *= 1 - ((1 - decrementRandom()) * frameRateFactor);\n            if (color.array[a] < 0.001) {\n                color.array[a] = 0;\n            }\n        }\n        position.needsUpdate = true;\n        velocity.needsUpdate = true;\n        color.needsUpdate = true;\n    }\n\n}\n\nclass BasicFireWorks {\n\n    constructor(scale, position) {\n        this.scale = scale;\n        this.position = position;\n        this.gravity = new Vector3(0, 0, -0.005 * scale);\n        this.meshGroup = new Group();\n        this.isExplode = false;\n        const max = 400;\n        const min = 150;\n        this.petalsNum = getRandomNum(max, min);\n        this.life = 150;\n        this.seed = this.getSeed();\n        this.meshGroup.add(this.seed.mesh);\n        this.flowerSizeRate = MathUtils.mapLinear(this.petalsNum, min, max, 0.4, 0.7);\n    }\n\n    getSeed() {\n        const num = 40;\n        const vels = [];\n\n        for (let i = 0; i < num; i++) {\n            const vx = 0;\n            const vy = 0;\n            const vz = (i === 0 ? Math.random() * 2.5 + 0.9 : Math.random() * 2.0 + 0.4) * this.scale;\n\n            vels.push(new Vector3(vx, vy, vz));\n        }\n\n        const pm = new ParticleSeedMesh(this.scale, num, vels);\n        const x = this.position.x;\n        const y = this.position.y;\n        const z = 0;\n\n        pm.mesh.position.set(x, y, z);\n        return pm;\n    }\n\n    explode(pos) {\n        this.isExplode = true;\n        this.flower = this.getFlower(pos);\n        this.meshGroup.add(this.flower.mesh);\n        this.meshGroup.remove(this.seed.mesh);\n        this.seed.disposeAll();\n    }\n\n    getFlower(pos) {\n        const num = this.petalsNum;\n        const vels = [];\n        let radius;\n        const dice = Math.random();\n\n        if (dice > 0.5) {\n            for (let i = 0; i < num; i++) {\n                radius = getRandomNum(120, 60) * 0.01 * this.scale;\n\n                const theta = MathUtils.degToRad(Math.random() * 180);\n                const phi = MathUtils.degToRad(Math.random() * 360);\n                const vx = Math.sin(theta) * Math.cos(phi) * radius;\n                const vy = Math.sin(theta) * Math.sin(phi) * radius;\n                const vz = Math.cos(theta) * radius;\n                const vel = new Vector3(vx, vy, vz);\n\n                vel.multiplyScalar(this.flowerSizeRate);\n                vels.push(vel);\n            }\n        } else {\n            const zStep = 180 / num;\n            const trad = (360 * (Math.random() * 20 + 1)) / num;\n            const xStep = trad;\n            const yStep = trad;\n\n            radius = getRandomNum(120, 60) * 0.01 * this.scale;\n            for (let i = 0; i < num; i++) {\n                const sphereRate = Math.sin(MathUtils.degToRad(zStep * i));\n                const vz = Math.cos(MathUtils.degToRad(zStep * i)) * radius;\n                const vx = Math.cos(MathUtils.degToRad(xStep * i)) * sphereRate * radius;\n                const vy = Math.sin(MathUtils.degToRad(yStep * i)) * sphereRate * radius;\n                const vel = new Vector3(vx, vy, vz);\n                vel.multiplyScalar(this.flowerSizeRate);\n                vels.push(vel);\n            }\n        }\n\n        const particleMesh = new ParticleMesh(this.scale, num, vels);\n\n        particleMesh.mesh.position.set(pos.x, pos.y, pos.z);\n        return particleMesh;\n    }\n\n    update(frameRateFactor) {\n        if (!this.isExplode) {\n            this.drawTail(frameRateFactor);\n        } else {\n            this.flower.update(this.gravity, frameRateFactor);\n            if (this.life > 0) {\n                this.life -= 1 * frameRateFactor;\n            }\n        }\n    }\n\n    drawTail(frameRateFactor) {\n        this.seed.update(this.gravity, frameRateFactor);\n        const {position, velocity} = this.seed.mesh.geometry.attributes;\n        let count = 0;\n        let isComplete = true;\n\n        // Check if the y-axis speed is down for all particles\n        for (let i = 0, l = velocity.array.length; i < l; i++) {\n            const v = velocity.array[i];\n            const index = i % 3;\n\n            if (index === 2 && v > 0) {\n                count++;\n            }\n        }\n\n        isComplete = count === 0;\n        if (!isComplete) {\n            return;\n        }\n\n        const {x, y, z} = this.seed.mesh.position;\n        const flowerPos = new Vector3(x, y, z);\n        let highestPos = 0;\n        let offsetPos;\n\n        for (let i = 0, l = position.array.length; i < l; i++) {\n            const p = position.array[i];\n            const index = i % 3;\n\n            if (index === 2 && p > highestPos) {\n                highestPos = p;\n                offsetPos = new Vector3(position.array[i - 2], position.array[i - 1], p);\n            }\n        }\n        if (offsetPos === undefined) {\n            return;\n        }\n        flowerPos.add(offsetPos);\n        this.explode(flowerPos);\n    }\n\n}\n\nclass RichFireWorks extends BasicFireWorks {\n\n    constructor(scale, position) {\n        super(scale, position);\n\n        const max = 150;\n        const min = 100;\n\n        this.petalsNum = getRandomNum(max, min);\n        this.flowerSizeRate = MathUtils.mapLinear(this.petalsNum, min, max, 0.4, 0.7);\n        this.tailMeshGroup = new Group();\n        this.tails = [];\n    }\n\n    explode(pos) {\n        this.isExplode = true;\n        this.flower = this.getFlower(pos);\n        this.tails = this.getTail();\n        this.meshGroup.add(this.flower.mesh);\n        this.meshGroup.add(this.tailMeshGroup);\n    }\n\n    getTail() {\n        const tails = [];\n        const num = 20;\n        const {color: petalColor} = this.flower.mesh.geometry.attributes;\n\n        for (let i = 0; i < this.petalsNum; i++) {\n            const vels = [];\n\n            for (let j = 0; j < num; j++) {\n                const vx = 0;\n                const vy = 0;\n                const vz = 0;\n\n                vels.push(new Vector3(vx, vy, vz));\n            }\n\n            const tail = new ParticleTailMesh(this.scale, num, vels);\n\n            const {r, g, b, a} = getOffsetRGBA(i);\n\n            const petalR = petalColor.array[r];\n            const petalG = petalColor.array[g];\n            const petalB = petalColor.array[b];\n            const petalA = petalColor.array[a];\n\n            const {position, color} = tail.mesh.geometry.attributes;\n\n            for (let k = 0; k < position.count; k++) {\n                const {r, g, b, a} = getOffsetRGBA(k);\n\n                color.array[r] = petalR;\n                color.array[g] = petalG;\n                color.array[b] = petalB;\n                color.array[a] = petalA;\n            }\n\n            const {x, y, z} = this.flower.mesh.position;\n\n            tail.mesh.position.set(x, y, z);\n            tails.push(tail);\n            this.tailMeshGroup.add(tail.mesh);\n        }\n        return tails;\n    }\n\n    update(frameRateFactor) {\n        if (!this.isExplode) {\n            this.drawTail(frameRateFactor);\n        } else {\n            this.flower.update(this.gravity, frameRateFactor);\n\n            const {position: flowerGeometory} = this.flower.mesh.geometry.attributes;\n\n            for (let i = 0, l = this.tails.length; i < l; i++) {\n                const tail = this.tails[i];\n                tail.update(this.gravity, frameRateFactor);\n                const {x, y, z} = getOffsetXYZ(i);\n                const flowerPos = new Vector3(\n                    flowerGeometory.array[x],\n                    flowerGeometory.array[y],\n                    flowerGeometory.array[z]\n                );\n                const {position, velocity} = tail.mesh.geometry.attributes;\n\n                for (let k = 0; k < position.count; k++) {\n                    const {x, y, z} = getOffsetXYZ(k);\n                    const desiredVelocity = new Vector3();\n                    const tailPos = new Vector3(position.array[x], position.array[y], position.array[z]);\n                    const tailVel = new Vector3(velocity.array[x], velocity.array[y], velocity.array[z]);\n\n                    desiredVelocity.subVectors(flowerPos, tailPos);\n\n                    const steer = desiredVelocity.sub(tailVel);\n\n                    steer.normalize();\n                    steer.multiplyScalar(Math.random() * 0.0003 * this.life * this.scale * frameRateFactor);\n                    velocity.array[x] += steer.x;\n                    velocity.array[y] += steer.y;\n                    velocity.array[z] += steer.z;\n                }\n                velocity.needsUpdate = true;\n            }\n\n            if (this.life > 0) {\n                this.life -= 1.2 * frameRateFactor;\n            }\n        }\n    }\n\n}\n\nclass FireworksLayer {\n\n    constructor(options) {\n        const me = this;\n        let lastTick = performance.now();\n\n        me.id = options.id;\n        me.type = 'three';\n        me.lightColor = 'white';\n        me.fireworksInstances = {};\n\n        const repeat = () => {\n            const now = performance.now();\n\n            me.tick((now - lastTick) / (1000 / 60));\n            lastTick = now;\n            requestAnimationFrame(repeat);\n        };\n\n        repeat();\n    }\n\n    onAdd(map, context) {\n        const me = this;\n\n        me.map = map;\n        me.scene = context.scene;\n    }\n\n    tick(frameRateFactor) {\n        const {fireworksInstances, scene} = this;\n\n        for (const key of Object.keys(fireworksInstances)) {\n            const instances = fireworksInstances[key];\n            const exploadedIndexList = [];\n\n            for (let i = instances.length - 1; i >= 0; i--) {\n                const instance = instances[i];\n\n                instance.update(frameRateFactor);\n                if (instance.isExplode) {\n                    exploadedIndexList.push(i);\n                }\n            }\n\n            for (let i = 0, l = exploadedIndexList.length; i < l; i++) {\n                const index = exploadedIndexList[i];\n                const instance = instances[index];\n\n                if (!instance) {\n                    return;\n                }\n\n                /*\n                    Be careful because js heap size will continue to increase unless you do the following:\n                    - Remove unuse mesh from scene\n                    - Execute dispose method of Geometres and Materials in the Mesh\n                */\n                instance.meshGroup.remove(instance.seed.mesh);\n                instance.seed.disposeAll();\n                if (instance.life <= 0) {\n                    scene.remove(instance.meshGroup);\n                    if (instance.tailMeshGroup) {\n                        instance.tails.forEach(v => {\n                            v.disposeAll();\n                        });\n                    }\n                    instance.flower.disposeAll();\n                    instances.splice(index, 1);\n                }\n            }\n        }\n    }\n\n    launchFireWorks(key, lngLat) {\n        const me = this;\n        const {map, scene, fireworksInstances} = me;\n        let instances = fireworksInstances[key];\n\n        if (!instances) {\n            instances = me.fireworksInstances[key] = [];\n        }\n\n        if (instances.length > 5) {\n            return;\n        }\n\n        const modelPosition = map.getModelPosition(lngLat);\n        const modelScale = map.getModelScale();\n        const scale = Math.pow(2, 17 - clamp(map.getZoom(), 14, 16)) * modelScale;\n        const position = {\n            x: modelPosition.x + (Math.random() * 400 - 200) * modelScale,\n            y: modelPosition.y + (Math.random() * 400 - 200) * modelScale\n        };\n        const fw = Math.random() > 0.5 ? new BasicFireWorks(scale, position) : new RichFireWorks(scale, position);\n\n        instances.push(fw);\n        scene.add(fw.meshGroup);\n    }\n\n}\n\nclass FireworksControl {\n\n    constructor(options) {\n        const me = this,\n            {lang, clock, eventHandler} = options;\n\n        me._lang = lang;\n        me._clock = clock;\n        me._dict = {\n            en: {\n                'title-line-1': 'Today\\'s',\n                'title-line-2': 'festivals',\n                'to': ' - ',\n                'more': 'and $1 more'\n            },\n            es: {\n                'title-line-1': 'La fiesta',\n                'title-line-2': 'de hoy',\n                'to': ' - ',\n                'more': 'y $1 más'\n            },\n            fr: {\n                'title-line-1': 'Les fêtes',\n                'title-line-2': 'd\\'aujourd\\'hui',\n                'to': ' - ',\n                'more': 'et $1 autres'\n            },\n            ja: {\n                'title-line-1': '今日の',\n                'title-line-2': '花火大会',\n                'to': '〜',\n                'more': 'ほか$1件'\n            },\n            ko: {\n                'title-line-1': '오늘의',\n                'title-line-2': '불꽃놀이',\n                'to': ' - ',\n                'more': '외 $1개'\n            },\n            ne: {\n                'title-line-1': 'आजका',\n                'title-line-2': 'चाडपर्वहरू',\n                'to': ' - ',\n                'more': 'र 1 थप'\n            },\n            pt: {\n                'title-line-1': 'Os festivais',\n                'title-line-2': 'de hoje',\n                'to': ' - ',\n                'more': 'e mais $1'\n            },\n            th: {\n                'title-line-1': 'เทศกาล',\n                'title-line-2': 'วันนี้',\n                'to': ' - ',\n                'more': 'และอีก $1 รายการ'\n            },\n            'zh-Hans': {\n                'title-line-1': '今天的',\n                'title-line-2': '烟火大会',\n                'to': ' - ',\n                'more': '其他$1场'\n            },\n            'zh-Hant': {\n                'title-line-1': '今天的',\n                'title-line-2': '煙火大會',\n                'to': ' - ',\n                'more': '其他$1場'\n            }\n        };\n        me._eventHandler = eventHandler;\n    }\n\n    getDefaultPosition() {\n        return 'top-left';\n    }\n\n    onAdd(map) {\n        const me = this;\n\n        me._map = map;\n\n        me._container = document.createElement('div');\n        me._container.className = 'mapboxgl-ctrl ctrl-group';\n        me._container.style.display = 'none';\n\n        me._element = document.createElement('div');\n        me._element.className = 'fireworks-ctrl';\n        me._container.appendChild(me._element);\n\n        return me._container;\n    }\n\n    onRemove() {\n        const me = this;\n\n        me._container.parentNode.removeChild(me._container);\n        delete me._container;\n        delete me._map;\n    }\n\n    refresh(events) {\n        const me = this,\n            dict = me._dict[me._lang] || me._dict.en,\n            container = me._container,\n            element = me._element,\n            baseTime = me._clock.getTime('03:00'),\n            now = me._clock.getTime(),\n            ids = Object.keys(events).filter(id => {\n                const {start, end} = events[id];\n                return start >= baseTime && start < baseTime + 86400000 && end > now;\n            }),\n            height = () => container.classList.contains('expanded') ?\n                `min(${ids.length * 49 + 40}px, calc(100dvh - ${container.getBoundingClientRect().top + 56}px))` :\n                '';\n\n        if (ids.length === 0) {\n            container.style.display = 'none';\n            return;\n        }\n\n        container.style.display = 'block';\n        element.innerHTML = [\n            '<div class=\"fireworks-header\">',\n            '<div class=\"fireworks-title\">',\n            dict['title-line-1'],\n            '<br>',\n            dict['title-line-2'],\n            '</div>',\n            '<div id=\"fireworks-expand-button\" class=\"fireworks-expand-button\">',\n            '</div>',\n            '</div>',\n            '<div class=\"fireworks-body\">',\n            '<div class=\"fireworks-content\">',\n            `<button id=\"fireworks-${ids[0]}\" class=\"fireworks-event\">`,\n            '<div class=\"fireworks-event-label\">',\n            events[ids[0]].name[me._lang] || events[ids[0]].name.en,\n            '<br>',\n            me._clock.getTimeString(events[ids[0]].start),\n            dict['to'],\n            '</div>',\n            '</button>',\n            '<div class=\"fireworks-list\">',\n            ...ids.slice(1).map(id => [\n                `<button id=\"fireworks-${id}\" class=\"fireworks-event\">`,\n                '<div class=\"fireworks-event-label\">',\n                events[id].name[me._lang] || events[id].name.en,\n                '<br>',\n                me._clock.getTimeString(events[id].start),\n                dict['to'],\n                '</div>',\n                '</button>'\n            ].join('')),\n            '</div>',\n            ids.length > 1 ? [\n                '<div class=\"fireworks-footer\">',\n                dict['more'].replace('$1', ids.length - 1),\n                '</div>'\n            ].join('') : '',\n            '</div>',\n            '</div>'\n        ].join('');\n\n        container.style.height = height();\n\n        document.getElementById('fireworks-expand-button').addEventListener('click', () => {\n            container.classList.toggle('expanded');\n            container.style.height = height();\n        });\n\n        for (const id of ids) {\n            document.getElementById(`fireworks-${id}`).addEventListener('click', () => {\n                container.classList.remove('expanded');\n                container.style.height = height();\n                me._eventHandler({id});\n            });\n        }\n    }\n\n}\n\nclass FireworksPlugin {\n\n    constructor() {\n        const me = this;\n\n        me.id = 'fireworks';\n        me.name = {\n            en: 'Fireworks',\n            es: 'Fuegos artificiales',\n            fr: 'Feux d\\'artifice',\n            ja: '花火',\n            ko: '불꽃놀이',\n            ne: 'आतिशबाजी',\n            pt: 'Fogos de artifício',\n            th: 'ดอกไม้ไฟ',\n            'zh-Hans': '烟花',\n            'zh-Hant': '煙花'\n        };\n        me.iconStyle = {\n            backgroundSize: '32px',\n            backgroundImage: `url(\"${fireworksSVG}\")`\n        };\n        me.viewModes = ['ground'];\n        me.layer = new FireworksLayer({id: me.id});\n        me.events = {};\n        me.activeEvents = {};\n    }\n\n    onAdd(map) {\n        const me = this,\n            {lang, clock} = me.map = map;\n\n        map.addLayer(me.layer);\n        me.fireworksCtrl = new FireworksControl({lang, clock, eventHandler: ({id}) => {\n            map.flyTo({center: me.events[id].center, zoom: 15, pitch: 60});\n        }});\n    }\n\n    onRemove(map) {\n        map.removeLayer(this.id);\n    }\n\n    onEnabled() {\n        const me = this;\n\n        me.map.getMapboxMap().addControl(me.fireworksCtrl);\n\n        me.dataInterval = callAndSetInterval(() => {\n            fetch(FIRWORKS_URL)\n                .then(response => response.json())\n                .then(data => {\n                    me._updateEvents(data);\n                    me._updateActiveEvents();\n                    me.fireworksCtrl.refresh(me.events);\n                });\n        }, DATA_INTERVAL);\n\n        const repeat = () => {\n            const now = me.map.clock.getTime();\n\n            if (Math.floor(now / ACTIVITY_INTERVAL) !== Math.floor(me._lastActivityRefresh / ACTIVITY_INTERVAL)) {\n                me._updateActiveEvents();\n                me.fireworksCtrl.refresh(me.events);\n                me._lastActivityRefresh = now;\n            }\n            me._frameRequestID = requestAnimationFrame(repeat);\n        };\n\n        repeat();\n\n        me.interval = callAndSetInterval(() => {\n            if (me.visible) {\n                for (const id of Object.keys(me.activeEvents)) {\n                    if (Math.random() > 0.7) {\n                        me.layer.launchFireWorks(id, me.activeEvents[id].center);\n                    }\n                }\n            }\n        }, FIREWORKS_INTERVAL);\n    }\n\n    onDisabled() {\n        const me = this;\n\n        clearInterval(me.dataInterval);\n        cancelAnimationFrame(me._frameRequestID);\n        delete me._lastActivityRefresh;\n        clearInterval(me.interval);\n\n        me._updateEvents([]);\n\n        me.map.getMapboxMap().removeControl(me.fireworksCtrl);\n    }\n\n    onVisibilityChanged(visible) {\n        const me = this,\n            {map, activeEvents} = me;\n\n        me.visible = visible;\n\n        for (const id of Object.keys(activeEvents)) {\n            activeEvents[id].marker.setVisibility(visible);\n        }\n        map.setLayerVisibility(me.id, visible ? 'visible' : 'none');\n    }\n\n    _updateEvents(data) {\n        const me = this,\n            {map, events, activeEvents} = me;\n\n        for (const item of data) {\n            const id = item.id,\n                event = events[id];\n\n            if (event) {\n                event.marker.setLngLat(item.center);\n                event.updated = true;\n                continue;\n            }\n\n            const element = createElement('div', {\n                    className: 'fireworks-marker',\n                    innerHTML: item.name[map.lang] || item.name.en\n                }),\n                marker = new Marker({element})\n                    .setLngLat(item.center)\n                    .addTo(map)\n                    .setVisibility(false)\n                    .on('click', () => {\n                        map.flyTo({center: events[id].center, zoom: 15, pitch: 60});\n                    });\n\n            marker._marker.setOffset([0, 40]);\n            events[id] = Object.assign({marker, updated: true}, item);\n        }\n\n        for (const id of Object.keys(events)) {\n            if (events[id].updated) {\n                delete events[id].updated;\n            } else {\n                events[id].marker.remove();\n                delete events[id];\n                delete activeEvents[id];\n            }\n        }\n    }\n\n    _updateActiveEvents() {\n        const me = this,\n            now = me.map.clock.getTime();\n\n        for (const id of Object.keys(me.events)) {\n            const event = me.events[id],\n                isActive = now >= event.start && now < event.end;\n\n            if (isActive && !me.activeEvents[id]) {\n                me.activeEvents[id] = event;\n                event.marker.setVisibility(me.visible);\n            } else if (!isActive && me.activeEvents[id]) {\n                delete me.activeEvents[id];\n                event.marker.setVisibility(false);\n            }\n        }\n    }\n\n}\n\nexport default function() {\n    return new FireworksPlugin();\n}\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","AdditiveBlending","BufferGeometry","DynamicDrawUsage","Float32BufferAttribute","Group","MathUtils","Points","RawShaderMaterial","CanvasTexture","Vector3","THREE","tagName","attributes","container","element","Object","assign","callAndSetInterval","fn","interval","setInterval","friction","getOffsetXYZ","i","index","x","y","z","getOffsetRGBA","r","g","b","a","getRandomNum","max","min","Math","floor","random","canvasTexture","canvas","ctx","getContext","width","height","canvasRadius","canvasW","canvasH","save","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","restore","drawRadialGradation","diameter","getTexture","ParticleMesh","constructor","scale","num","vels","this","particleNum","timerStartFading","mesh","bufferGeometry","vertices","velocities","colors","adjustSizes","masses","colorType","singleColor","multipleColor","rgbType","rgbTypeDice","pos","push","size","setAttribute","setUsage","shaderMaterial","uniforms","value","texture","transparent","depthWrite","blending","vertexShader","fragmentShader","getPointMesh","update","gravity","frameRateFactor","position","velocity","color","mass","geometry","array","v","needsUpdate","disposeAll","dispose","material","ParticleSeedMesh","super","shake","dice","_f","ParticleTailMesh","BasicFireWorks","meshGroup","isExplode","petalsNum","life","seed","getSeed","add","flowerSizeRate","mapLinear","vx","vy","vz","pm","set","explode","flower","getFlower","remove","radius","theta","degToRad","phi","sin","cos","vel","multiplyScalar","zStep","trad","xStep","yStep","sphereRate","particleMesh","drawTail","count","isComplete","l","length","flowerPos","offsetPos","highestPos","p","undefined","RichFireWorks","tailMeshGroup","tails","getTail","petalColor","j","tail","petalR","petalG","petalB","petalA","k","flowerGeometory","desiredVelocity","tailPos","tailVel","subVectors","steer","sub","normalize","FireworksLayer","options","me","lastTick","performance","now","id","lightColor","fireworksInstances","repeat","tick","requestAnimationFrame","onAdd","map","context","scene","key","keys","instances","exploadedIndexList","instance","forEach","splice","launchFireWorks","lngLat","modelPosition","getModelPosition","modelScale","getModelScale","pow","getZoom","upper","fw","FireworksControl","lang","clock","eventHandler","_lang","_clock","_dict","en","to","more","es","fr","ja","ko","ne","pt","th","_eventHandler","getDefaultPosition","_map","_container","className","display","_element","onRemove","parentNode","removeChild","refresh","events","dict","baseTime","getTime","ids","filter","start","end","classList","contains","getBoundingClientRect","top","innerHTML","name","getTimeString","slice","join","replace","getElementById","addEventListener","toggle","FireworksPlugin","iconStyle","backgroundSize","backgroundImage","viewModes","layer","activeEvents","addLayer","fireworksCtrl","flyTo","center","zoom","pitch","removeLayer","onEnabled","getMapboxMap","addControl","dataInterval","fetch","then","response","json","data","_updateEvents","_updateActiveEvents","_lastActivityRefresh","_frameRequestID","visible","onDisabled","clearInterval","cancelAnimationFrame","removeControl","onVisibilityChanged","marker","setVisibility","setLayerVisibility","item","event","setLngLat","updated","Marker","addTo","on","_marker","setOffset","isActive"],"mappings":"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","x_google_ignoreList":[0]}