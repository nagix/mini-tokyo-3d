{"version":3,"file":"mt3d-plugin-plateau.min.js","sources":["../src/index.js"],"sourcesContent":["import plateauSVG from './plateau.svg';\n\n// Model URL\nconst MODEL_URL = 'https://mini-tokyo.appspot.com/plateau-models.geojson';\n\n// GSI Ortho URL\nconst GSI_ORTHO_URL = 'https://cyberjapandata.gsi.go.jp/xyz/seamlessphoto/{z}/{x}/{y}.jpg';\n\n// GSI Ortho Attribution\nconst GSI_ORTHO_ATTRIBUTION = '<a href=\"https://maps.gsi.go.jp/development/ichiran.html\">国土地理院</a>';\n\n// PLATEAU Ortho URL\nconst PLATEAU_ORTHO_URL = 'https://api.plateauview.mlit.go.jp/tiles/plateau-ortho-2023/{z}/{x}/{y}.png';\n\n// PLATEAU Ortho Attribution\nconst PLATEAU_ORTHO_ATTRIBUTION = '<a href=\"https://www.mlit.go.jp/plateau/\">国土交通省Project PLATEAU</a>';\n\nclass PlateauPlugin {\n\n    constructor(options) {\n        const me = this;\n\n        me.id = 'plateau';\n        me.name = {\n            de: 'PLATEAU',\n            en: 'PLATEAU',\n            es: 'PLATEAU',\n            fr: 'PLATEAU',\n            ja: 'PLATEAU',\n            ko: 'PLATEAU',\n            ne: 'PLATEAU',\n            pt: 'PLATEAU',\n            th: 'PLATEAU',\n            'zh-Hans': 'PLATEAU',\n            'zh-Hant': 'PLATEAU'\n        };\n        me.iconStyle = {\n            backgroundSize: '32px',\n            backgroundImage: `url(\"${plateauSVG}\")`\n        };\n        me.viewModes = ['ground'];\n        me.enabled = options && options.enabled;\n        me._tick = me._tick.bind(me);\n        me._updateLayers = me._updateLayers.bind(me);\n        me._layers = new Set();\n    }\n\n    onAdd(map) {\n        this.map = map;\n    }\n\n    onRemove(map) {\n        for (const id of ['gsi-ortho', 'plateau-ortho', 'plateau-model']) {\n            map.removeLayer(id);\n        }\n        for (const code of this._layer) {\n            map.removeLayer(`tile-3d-${code}`);\n        }\n    }\n\n    onEnabled() {\n        const {map, _tick, _updateLayers} = this;\n\n        for (const id of ['trees', 'wind-turbine-towers', 'wind-turbine-rotors', '3d-building', 'building-models']) {\n            map.setLayerVisibility(id, 'none');\n        }\n\n        if (map.getMapboxMap().getLayer('plateau-ortho')) {\n            return;\n        }\n\n        map.addLayer({\n            id: 'gsi-ortho',\n            type: 'raster',\n            source: {\n                type: 'raster',\n                tiles: [GSI_ORTHO_URL],\n                maxzoom: 18,\n                minzoom: 2,\n                attribution: GSI_ORTHO_ATTRIBUTION\n            }\n        }, 'stations-marked-13');\n        map.addLayer({\n            id: 'plateau-ortho',\n            type: 'raster',\n            source: {\n                type: 'raster',\n                tiles: [PLATEAU_ORTHO_URL],\n                maxzoom: 19,\n                minzoom: 10,\n                attribution: PLATEAU_ORTHO_ATTRIBUTION\n            }\n        }, 'stations-marked-13');\n        map.addLayer({\n            id: 'plateau-model',\n            type: 'fill',\n            source: {\n                type: 'geojson',\n                data: MODEL_URL\n            },\n            paint: {\n                'fill-opacity': 0\n            }\n        }, 'stations-marked-13');\n\n        _tick();\n\n        map.on('move', _updateLayers);\n    }\n\n    _tick() {\n        const me = this,\n            {map, lastRefresh, _tick} = me,\n            mapboxMap = map.getMapboxMap(),\n            now = map.clock.getTime();\n\n        if (mapboxMap.getLayer('plateau-ortho')) {\n            if (Math.floor(now / 60000) !== Math.floor(lastRefresh / 60000)) {\n                const {r, g, b} = map.getLightColor(),\n                    luminance = .2126 * r + .7152 * g + .0722 * b;\n\n                for (const id of ['gsi-ortho', 'plateau-ortho']) {\n                    mapboxMap.setPaintProperty(id, 'raster-brightness-max', luminance);\n                }\n                me.lastRefresh = now;\n            }\n            requestAnimationFrame(_tick);\n        }\n    }\n\n    _updateLayers() {\n        const {map, _layers: layers} = this,\n            {width, height} = map.container.getBoundingClientRect(),\n            features = map.getMapboxMap().queryRenderedFeatures([width / 2, height / 2], {layers: ['plateau-model']}),\n            layersToRemove = new Set(layers);\n\n        for (const feature of features) {\n            const {code, url} = feature.properties;\n\n            layersToRemove.delete(code);\n            if (!layers.has(code)) {\n                map.addLayer({\n                    id: `tile-3d-${code}`,\n                    type: 'tile-3d',\n                    data: url,\n                    loadOptions: {\n                        tileset: {\n                            throttleRequests: false,\n                        }\n                    },\n                    minzoom: 13,\n                    opacity: 0.8,\n                    onTileLoad: ({content}) => {\n                        const zmin = content.batchTableJson._zmin,\n                            cartographicOrigin = content.cartographicOrigin;\n\n                        if (zmin) {\n                            const buffer = content.batchTableBinary.buffer,\n                                len = content.featureTableJson.BATCH_LENGTH,\n                                zMinView = new DataView(buffer, zmin.byteOffset, len * 8),\n                                zMins = [];\n\n                            for (let i = 0; i < len; i++) {\n                                zMins.push(zMinView.getFloat64(i * 8, true));\n                            }\n                            zMins.sort((a, b) => a - b);\n                            cartographicOrigin.z -= zMins[Math.floor(len / 2)];\n                        }\n                        cartographicOrigin.z -= 36.6641;\n                        content.featureTableBinary = null;\n                        content.featureTableJson = null;\n                        content.batchTableBinary = null;\n                        content.batchTableJson = null;\n\n                        for (const item of content.gltf.images || []) {\n                            const image = item.image,\n                                resizeWidth = image.width / 4,\n                                resizeHeight = image.height / 4;\n\n                            createImageBitmap(image, {resizeWidth, resizeHeight}).then(resizedImage => {\n                                item.image = resizedImage;\n                            });\n                        }\n                    }\n                });\n                layers.add(code);\n            }\n        }\n        for (const code of layersToRemove) {\n            map.removeLayer(`tile-3d-${code}`);\n            layers.delete(code);\n        }\n    }\n\n    onDisabled() {\n        const {map, _updateLayers} = this;\n\n        for (const id of ['trees', 'wind-turbine-towers', 'wind-turbine-rotors', '3d-building', 'building-models']) {\n            map.setLayerVisibility(id, 'visible');\n        }\n        map.off('move', _updateLayers);\n    }\n\n    onVisibilityChanged(visible) {\n        const {map, _layers, _updateLayers} = this,\n            mapboxMap = map.getMapboxMap();\n\n        if (mapboxMap.getLayer('plateau-ortho')) {\n            const visibility = visible ? 'visible' : 'none';\n\n            for (const id of ['gsi-ortho', 'plateau-ortho', 'plateau-model']) {\n                map.setLayerVisibility(id, visibility);\n            }\n            for (const code of _layers) {\n                map.setLayerVisibility(`tile-3d-${code}`, visibility);\n            }\n            mapboxMap.once('idle', _updateLayers);\n        }\n    }\n\n}\n\nexport default function(options) {\n    return new PlateauPlugin(options);\n}\n"],"names":["PlateauPlugin","constructor","options","me","this","id","name","de","en","es","fr","ja","ko","ne","pt","th","iconStyle","backgroundSize","backgroundImage","viewModes","enabled","_tick","bind","_updateLayers","_layers","Set","onAdd","map","onRemove","removeLayer","code","_layer","onEnabled","setLayerVisibility","getMapboxMap","getLayer","addLayer","type","source","tiles","maxzoom","minzoom","attribution","data","paint","on","lastRefresh","mapboxMap","now","clock","getTime","Math","floor","r","g","b","getLightColor","luminance","setPaintProperty","requestAnimationFrame","layers","width","height","container","getBoundingClientRect","features","queryRenderedFeatures","layersToRemove","feature","url","properties","delete","has","loadOptions","tileset","throttleRequests","opacity","onTileLoad","content","zmin","batchTableJson","_zmin","cartographicOrigin","len","featureTableJson","BATCH_LENGTH","zMinView","DataView","batchTableBinary","buffer","byteOffset","zMins","i","push","getFloat64","sort","a","z","featureTableBinary","item","gltf","images","image","createImageBitmap","resizeWidth","resizeHeight","then","resizedImage","add","onDisabled","off","onVisibilityChanged","visible","visibility","once"],"mappings":"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"}