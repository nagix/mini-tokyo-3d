{"version":3,"file":"mt3d-plugin-precipitation.min.js","sources":["../src/mapboxgl.js","../src/three.js","../node_modules/mapbox-gl-rain-layer/src/index.js","../src/index.js","../node_modules/@fortawesome/fontawesome-free/svgs/solid/cloud-showers-heavy.svg"],"sourcesContent":["import {mapboxgl} from 'mini-tokyo-3d';\n\nexport const {\n    Evented,\n    MercatorCoordinate\n} = mapboxgl;\n","import {THREE} from 'mini-tokyo-3d';\n\nexport const {\n    AmbientLight,\n    BoxGeometry,\n    BufferAttribute,\n    Camera,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    Group,\n    InstancedBufferGeometry,\n    InstancedMesh,\n    InstancedBufferAttribute,\n    Matrix4,\n    Mesh,\n    MeshLambertMaterial,\n    RawShaderMaterial,\n    Scene,\n    Vector4,\n    WebGLRenderer\n} = THREE;\n","import {Evented, MercatorCoordinate} from 'mapbox-gl';\nimport {AmbientLight, BoxGeometry, BufferAttribute, Camera, Color, DirectionalLight, DoubleSide, Group, InstancedBufferGeometry, InstancedMesh, InstancedBufferAttribute, Matrix4, Mesh, MeshLambertMaterial, RawShaderMaterial, Scene, Vector4, WebGLRenderer} from 'three';\nimport scales from './scales.json';\nimport sources from './sources.json';\n\nconst RESOLUTION_X = 64;\nconst RESOLUTION_Y = 64;\n\nconst boxGeometry = new BoxGeometry(1, -1, 1);\nboxGeometry.translate(0.5, 0.5, 0.5);\n\nconst rainVertexBuffer = new Float32Array([\n    // Front\n    -0.002, 0.002, 0.01,\n    0.002, 0.002, 0.01,\n    -0.002, 0.002, -0.01,\n    0.002, 0.002, -0.01,\n    // Left\n    -0.002, -0.002, 0.01,\n    -0.002, 0.002, 0.01,\n    -0.002, -0.002, -0.01,\n    -0.002, 0.002, -0.01,\n    // Top\n    -0.002, 0.002, 0.01,\n    0.002, 0.002, 0.01,\n    -0.002, -0.002, 0.01,\n    0.002, -0.002, 0.01\n]);\n\nconst rainIndices = new Uint16Array([\n    0, 1, 2,\n    2, 1, 3,\n    4, 5, 6,\n    6, 5, 7,\n    8, 9, 10,\n    10, 9, 11\n]);\n\nconst rainVertexShader = `\n    precision highp float;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform float time;\n    uniform float scale;\n    attribute vec3 position;\n    attribute vec3 offset;\n\n    void main(void) {\n        vec3 translate = vec3(position.x * scale + offset.x, position.y * scale + offset.y, position.z + mod(offset.z - time + 1.0, 1.0));\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(translate, 1.0);\n    }\n`;\n\nconst rainFragmentShader = `\n    precision highp float;\n    uniform vec4 color;\n\n    void main(void) {\n        gl_FragColor = color;\n    }\n`;\n\nfunction valueOrDefault(value, defaultValue) {\n    return value === undefined ? defaultValue : value;\n}\n\nfunction resolve(object, key) {\n    let first = key.split(/\\.|(?=\\[)/)[0];\n    const rest = key.slice(first.length).replace(/^\\./, '');\n\n    if (Array.isArray(object) && first.match(/^\\[-?\\d+\\]$/)) {\n        first = +first.slice(1, -1);\n        if (first < 0) {\n            first += object.length;\n        }\n    }\n    if (first in object && rest) {\n        return resolve(object[first], rest);\n    }\n    return object[first];\n}\n\nfunction format(text, dict) {\n    const matches = text.match(/\\$\\{[^}]+\\}/g);\n\n    if (matches) {\n        for (const match of matches) {\n            text = text.replace(match, resolve(dict, match.slice(2, -1)));\n        }\n    }\n    return text;\n}\n\nfunction getMercatorBounds(canonical) {\n    const {x, y, z} = canonical;\n    const n = Math.pow(2, z);\n    const lng1 = x / n * 360 - 180;\n    const lat1 = Math.atan(Math.sinh(Math.PI * (1 - 2 * y / n))) * 180 / Math.PI;\n    const lng2 = (x + 1) / n * 360 - 180;\n    const lat2 = Math.atan(Math.sinh(Math.PI * (1 - 2 * (y + 1) / n))) * 180 / Math.PI;\n    const coord1 = MercatorCoordinate.fromLngLat([lng1, lat1]);\n    const coord2 = MercatorCoordinate.fromLngLat([lng2, lat2]);\n\n    return {x: coord1.x, y: coord1.y, dx: coord2.x - coord1.x, dy: coord2.y - coord1.y};\n}\n\nfunction createBoxMesh(z, mercatorBounds, dbz, scaleColors, material) {\n    const factor = 1 / Math.pow(2, (z - 1) / 3);\n    const resolutionX = Math.floor(RESOLUTION_X * factor);\n    const resolutionY = Math.floor(RESOLUTION_Y * factor);\n    const threshold = scaleColors[0][0];\n    const instances = [];\n\n    for (let y = 0; y < resolutionY; y++) {\n        for (let x = 0; x < resolutionX; x++) {\n            const level = dbz[Math.floor((y + 0.5) / resolutionY * 256) * 256 + Math.floor((x + 0.5) / resolutionX * 256)];\n            if (level >= threshold) {\n                for (let p = 1; p < scaleColors.length; p++) {\n                    if (level < scaleColors[p][0]) {\n                        instances.push({x, y, p});\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    if (instances.length === 0) {\n        return;\n    }\n\n    const mesh = new InstancedMesh(boxGeometry, material, instances.length);\n    for (let i = 0; i < instances.length; i++) {\n        const {x, y, p} = instances[i];\n        const matrix = new Matrix4()\n            .makeScale(1 / resolutionX, 1 / resolutionY, 1)\n            .setPosition(x / resolutionX, y / resolutionY, 0);\n        mesh.setMatrixAt(i, matrix);\n        mesh.setColorAt(i, scaleColors[p][1]);\n    }\n    mesh.position.x = mercatorBounds.x;\n    mesh.position.y = mercatorBounds.y;\n    mesh.scale.x = mercatorBounds.dx;\n    mesh.scale.y = mercatorBounds.dy;\n    mesh.scale.z = Math.pow(2, Math.max(0, 10 - z)) * 0.0002;\n    mesh.updateMatrix();\n    mesh.matrixAutoUpdate = false;\n    mesh.renderOrder = 1;\n    return mesh;\n}\n\nfunction createRainMesh(z, mercatorBounds, dbz, scaleColors, material) {\n    const factor = 1 / Math.pow(2, (z - 1) / 3);\n    const resolutionX = Math.floor(RESOLUTION_X * factor);\n    const resolutionY = Math.floor(RESOLUTION_Y * factor);\n    const threshold = scaleColors[0][0];\n    const instances = [];\n\n    for (let y = 0; y < resolutionY; y++) {\n        for (let x = 0; x < resolutionX; x++) {\n            const level = dbz[Math.floor((y + 0.5) / resolutionY * 256) * 256 + Math.floor((x + 0.5) / resolutionX * 256)];\n            if (level >= threshold) {\n                for (let i = 0; i < Math.pow(2, (level - threshold) / 10); i++) {\n                    instances.push({x, y});\n                }\n            }\n        }\n    }\n    if (instances.length === 0) {\n        return;\n    }\n\n    const instancedBufferGeometry = new InstancedBufferGeometry();\n\n    const positions = new BufferAttribute(rainVertexBuffer, 3);\n    instancedBufferGeometry.setAttribute('position', positions);\n\n    instancedBufferGeometry.setIndex(new BufferAttribute(rainIndices, 1));\n\n    const rainOffsetBuffer = new Float32Array(instances.length * 3);\n    const offsets = new InstancedBufferAttribute(rainOffsetBuffer, 3);\n    for (let i = 0; i < instances.length; i++) {\n        const {x, y} = instances[i];\n        offsets.setXYZ(\n            i,\n            (x + Math.random()) / resolutionX,\n            (y + Math.random()) / resolutionY,\n            Math.random()\n        );\n    }\n    instancedBufferGeometry.setAttribute('offset', offsets);\n\n    const mesh = new Mesh(instancedBufferGeometry, material);\n    mesh.position.x = mercatorBounds.x;\n    mesh.position.y = mercatorBounds.y;\n    mesh.scale.x = mercatorBounds.dx;\n    mesh.scale.y = mercatorBounds.dy;\n    mesh.scale.z = Math.pow(2, Math.max(0, 10 - z)) * 0.0002;\n    mesh.updateMatrix();\n    mesh.matrixAutoUpdate = false;\n    mesh.frustumCulled = false;\n    return mesh;\n}\n\nfunction disposeMesh(mesh) {\n    if (mesh.geometry instanceof InstancedBufferGeometry) {\n        mesh.geometry.dispose();\n    }\n    if (mesh instanceof InstancedMesh) {\n        mesh.dispose();\n    }\n}\n\nfunction loadTile(tile, callback) {\n    this.constructor.prototype.loadTile.call(this, tile, err => {\n        const {x, y, z} = tile.tileID.canonical;\n        const position = `${z}/${x}/${y}`;\n        const texture = tile.texture;\n        const layer = this._parentLayer;\n        const tileDict = this._tileDict;\n\n        if (texture && layer && !tileDict[position]) {\n            const gl = this.map.painter.context.gl;\n            const fb = gl.createFramebuffer();\n            const [width, height] = texture.size;\n            const pixels = new Uint8Array(width * height * 4);\n            const dbz = tile._dbz = new Uint8Array(width * height);\n            const mercatorBounds = tile._mercatorBounds = getMercatorBounds(tile.tileID.canonical);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture.texture, 0);\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.deleteFramebuffer(fb);\n\n            if (layer._colors) {\n                // Index scale will be supported in the next minor version\n                const colors = layer._colors.map(color => parseInt(color.replace('#', '0x'), 16));\n                for (let i = 0; i < dbz.length; i++) {\n                    const color = ((pixels[i * 4] * 256) + pixels[i * 4 + 1]) * 256 + pixels[i * 4 + 2];\n                    for (let j = 0; j < colors.length; j++) {\n                        if (color === color[j]) {\n                            dbz[i] = j;\n                            break;\n                        }\n                    }\n                }\n            } else {\n                for (let i = 0; i < dbz.length; i++) {\n                    dbz[i] = pixels[i * 4] & 127;\n                }\n            }\n\n            const group = layer._zoomGroups[z - 1];\n            const boxMesh = createBoxMesh(z, mercatorBounds, dbz, layer._scaleColors, layer._meshMaterial);\n            if (boxMesh) {\n                tile._boxMesh = boxMesh;\n                group.add(boxMesh);\n            }\n            const rainMesh = createRainMesh(z, mercatorBounds, dbz, layer._scaleColors, layer._rainMaterial);\n            if (rainMesh) {\n                tile._rainMesh = rainMesh;\n                group.add(rainMesh);\n            }\n\n            tileDict[position] = tile;\n        }\n\n        callback(err);\n    });\n}\n\nfunction unloadTile(tile, callback) {\n    this.constructor.prototype.unloadTile.call(this, tile, err => {\n        const {x, y, z} = tile.tileID.canonical;\n        const position = `${z}/${x}/${y}`;\n        const boxMesh = tile._boxMesh;\n        const rainMesh = tile._rainMesh;\n\n        if (boxMesh) {\n            boxMesh.parent.remove(boxMesh);\n            disposeMesh(boxMesh);\n            delete tile._boxMesh;\n        }\n\n        if (rainMesh) {\n            rainMesh.parent.remove(rainMesh);\n            disposeMesh(rainMesh);\n            delete tile._rainMesh;\n        }\n\n        delete this._tileDict[position];\n\n        callback(err);\n    });\n}\n\nexport default class RainLayer extends Evented {\n\n    constructor(options) {\n        super();\n\n        this.id = options.id;\n        this.type = 'custom';\n        this.renderingMode = '3d';\n        this.minzoom = options.minzoom;\n        this.maxzoom = options.maxzoom;\n        this.source = options.source || 'rainviewer';\n        this.scale = options.scale || 'noaa';\n        this.rainColor = options.rainColor || '#fff';\n        this.meshOpacity = valueOrDefault(options.meshOpacity, 0.1);\n        this.repaint = valueOrDefault(options.repaint, true);\n        this._interval = sources[this.source].interval;\n        this._colors = sources[this.source].colors;\n        this._onZoom = this._onZoom.bind(this);\n    }\n\n    onAdd(map, gl) {\n        this._parseColor = map.painter.context.clearColor.default.constructor.parse;\n\n        this._scene = new Scene();\n        this._camera = new Camera();\n\n        this._directionalLight = new DirectionalLight(0xffffff);\n        this._directionalLight.position.set(0, -70, 100).normalize();\n        this._scene.add(this._directionalLight);\n\n        this._ambientLight = new AmbientLight(0xffffff, .4);\n        this._scene.add(this._ambientLight);\n\n        this._meshMaterial = new MeshLambertMaterial({\n            opacity: this.meshOpacity,\n            transparent: this.meshOpacity < 1\n        });\n\n        const {r, g, b, a} = this._parseColor(this.rainColor);\n        this._rainMaterial = new RawShaderMaterial({\n            uniforms: {\n                time: {type: 'f', value: 0.0},\n                scale: {type: 'f', value: 1.0},\n                color: {type: 'v4', value: new Vector4(r, g, b, a)}\n            },\n            vertexShader: rainVertexShader,\n            fragmentShader: rainFragmentShader,\n            transparent: a < 1,\n            side: DoubleSide\n        });\n\n        this._baseZoom = Math.round(map.getZoom());\n        this._zoomGroups = [];\n        for (let i = 0; i <= 24; i++) {\n            this._zoomGroups[i] = new Group();\n            this._zoomGroups[i].visible = i === this._baseZoom;\n            this._scene.add(this._zoomGroups[i]);\n        }\n\n        const {scale, align} = scales[this.scale];\n        this._scaleColors = scale.map(({value, color}, index, array) => {\n            if (align === 'center') {\n                const nextValue = index < array.length - 1 ? array[index + 1].value : Infinity;\n                value = (value + nextValue) / 2;\n            }\n            return [value + 32, new Color(color)];\n        });\n\n        this._map = map;\n        this._map.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n        this._map.on('zoom', this._onZoom);\n\n        this._renderer = new WebGLRenderer({\n            canvas: map.getCanvas(),\n            context: gl,\n            antialias: true\n        });\n\n        this._renderer.autoClear = false;\n\n        this._refreshSource();\n        this._timer = setInterval(this._refreshSource.bind(this), this._interval);\n    }\n\n    onRemove() {\n        delete this._parseColor;\n\n        this._scene.remove(this._directionalLight);\n        this._directionalLight.dispose();\n        delete this._directionalLight;\n\n        this._scene.remove(this._ambientLight);\n        this._ambientLight.dispose();\n        delete this._ambientLight;\n\n        this._meshMaterial.dispose();\n        delete this._meshMaterial;\n\n        this._rainMaterial.dispose();\n        delete this._rainMaterial;\n\n        delete this._baseZoom;\n        for (let i = 0; i <= 24; i++) {\n            this._scene.remove(this._zoomGroups[i]);\n        }\n        delete this._zoomGroups;\n\n        delete this._scaleColors;\n\n        delete this._camera;\n        delete this._scene;\n\n        this._renderer.dispose();\n        delete this._renderer;\n\n        this._map.off('zoom', this._onZoom);\n        this._removeSource();\n        delete this._map;\n\n        clearInterval(this._timer);\n        delete this._timer;\n    }\n\n    render(gl, matrix) {\n        const zoom = this._map.getZoom();\n\n        this._rainMaterial.uniforms.time.value = performance.now() * 0.0006;\n        this._rainMaterial.uniforms.scale.value = Math.pow(2, this._baseZoom - zoom - (zoom >= 10.5 ? 1 : 0));\n        this._camera.projectionMatrix = new Matrix4().fromArray(matrix);\n        this._renderer.resetState();\n        this._renderer.render(this._scene, this._camera);\n        if (this.repaint) {\n            this._map.triggerRepaint();\n        }\n    }\n\n    _onZoom() {\n        this._baseZoom = Math.round(this._map.getZoom());\n        for (let i = 0; i <= 24; i++) {\n            this._zoomGroups[i].visible = i === this._baseZoom;\n        }\n    }\n\n    _refreshSource() {\n        const sourceId = this.source;\n        const {tiles, tileSize, minzoom, maxzoom, attribution, catalog, timestamp} = sources[sourceId];\n\n        fetch(catalog).then(response => response.json()).then(data => {\n            const map = this._map;\n\n            this._removeSource();\n\n            map.addSource(sourceId, {\n                type: 'raster',\n                tiles: tiles.map(tile => format(tile, data)),\n                tileSize,\n                minzoom,\n                maxzoom,\n                attribution\n            });\n\n            const source = map.getSource(sourceId);\n\n            source._parentLayer = this;\n            source._tileDict = {};\n            source.loadTile = loadTile;\n            source.unloadTile = unloadTile;\n\n            map.addLayer({\n                id: sourceId,\n                type: 'raster',\n                source: sourceId,\n                paint: {'raster-opacity': 0}\n            }, this.id);\n\n            this.fire({type: 'refresh', timestamp: +format(timestamp, data)});\n        });\n    }\n\n    _removeSource() {\n        const sourceId = this.source;\n        const map = this._map;\n        const source = map.getSource(sourceId);\n\n        if (source) {\n            map.removeLayer(sourceId);\n            map.removeSource(sourceId);\n            delete source._parentLayer;\n        }\n    }\n\n    setRainColor(rainColor) {\n        this.rainColor = rainColor || '#fff';\n        if (this._parseColor && this._rainMaterial) {\n            const {r, g, b, a} = this._parseColor(this.rainColor);\n            this._rainMaterial.uniforms.color.value = new Vector4(r, g, b, a);\n            this._rainMaterial.transparent = a < 1;\n\n        }\n        return this;\n    }\n\n    setMeshOpacity(meshOpacity) {\n        this.meshOpacity = valueOrDefault(meshOpacity, 0.1);\n        if (this._meshMaterial) {\n            this._meshMaterial.opacity = meshOpacity;\n            this._meshMaterial.transparent = meshOpacity < 1;\n        }\n        return this;\n    }\n\n    getLegendHTML() {\n        return [\n            '<div style=\"font-size: 10px; line-height: 14px;\"><div>dBZ</div>',\n            ...scales[this.scale].scale.slice(1).reverse().map(item => `\n                <div>\n                    <div style=\"display: inline-block; vertical-align: top; width: 14px; height: 14px; background-color: ${item.color}; border: solid 0.5px #aaa;\"></div>\n                    <div style=\"display: inline-block; vertical-align: top;\">${item.value}</div>\n                </div>\n            `),\n            '</div>'\n        ].join('');\n    }\n\n}\n","import RainLayer from 'mapbox-gl-rain-layer/src/index.js';\nimport precipitationSVG from '@fortawesome/fontawesome-free/svgs/solid/cloud-showers-heavy.svg';\n\nfunction addColor(url, color) {\n    const encodedColor = color.replace('#', '%23');\n    return url.replace('%3e', ` fill=\\'${encodedColor}\\' stroke=\\'${encodedColor}\\'%3e`);\n}\n\nclass PrecipitationPlugin {\n\n    constructor() {\n        const me = this;\n\n        me.id = 'precipitation';\n        me.name = {\n            en: 'Precipitation',\n            ja: '降水',\n            ko: '강수',\n            ne: 'वर्षा',\n            th: 'ฝน',\n            'zh-Hans': '降水',\n            'zh-Hant': '降水'\n        };\n        me.iconStyle = {\n            backgroundSize: '32px',\n            backgroundImage: `url(\"${addColor(precipitationSVG, 'white')}\")`\n        };\n        me.clockModes = ['realtime'];\n        me.viewModes = ['ground'];\n        me.layer = new RainLayer({\n            id: me.id,\n            rainColor: '#00f',\n            meshOpacity: 0,\n            repaint: false\n        });\n        me._onRefresh = me._onRefresh.bind(me);\n    }\n\n    onAdd(map) {\n        const me = this;\n\n        me.map = map;\n        map.addLayer(me.layer);\n    }\n\n    onRemove(map) {\n        map.removeLayer(this.id);\n    }\n\n    onEnabled() {\n        const me = this;\n\n        me.layer.on('refresh', me._onRefresh);\n        me._onRefresh();\n    }\n\n    onDisabled() {\n        const me = this;\n\n        me.layer.off('refresh', me._onRefresh);\n    }\n\n    onVisibilityChanged(visible) {\n        const me = this;\n\n        me.map.setLayerVisibility(me.id, visible ? 'visible' : 'none');\n    }\n\n    _onRefresh() {\n        const me = this;\n\n        me.layer.setRainColor(me.map.hasDarkBackground() ? '#fff' : '#00f');\n    }\n\n}\n\nexport default function() {\n    return new PrecipitationPlugin();\n}\n","var img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3e%3c!-- Font Awesome Free 5.15.4 by %40fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0%2c Fonts: SIL OFL 1.1%2c Code: MIT License) --%3e%3cpath d='M183.9 370.1c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-192 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm384 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zm-96 0c-7.6-4.4-17.4-1.8-21.8 6l-64 112c-4.4 7.7-1.7 17.5 6 21.8 2.5 1.4 5.2 2.1 7.9 2.1 5.5 0 10.9-2.9 13.9-8.1l64-112c4.4-7.6 1.7-17.4-6-21.8zM416 128c-.6 0-1.1.2-1.6.2 1.1-5.2 1.6-10.6 1.6-16.2 0-44.2-35.8-80-80-80-24.6 0-46.3 11.3-61 28.8C256.4 24.8 219.3 0 176 0 114.2 0 64 50.1 64 112c0 7.3.8 14.3 2.1 21.2C27.8 145.8 0 181.5 0 224c0 53 43 96 96 96h320c53 0 96-43 96-96s-43-96-96-96z'/%3e%3c/svg%3e\";\n  export default img;"],"names":["Evented","MercatorCoordinate","mapboxgl","AmbientLight","BoxGeometry","BufferAttribute","Camera","Color","DirectionalLight","DoubleSide","Group","InstancedBufferGeometry","InstancedMesh","InstancedBufferAttribute","Matrix4","Mesh","MeshLambertMaterial","RawShaderMaterial","Scene","Vector4","WebGLRenderer","THREE","boxGeometry","translate","rainVertexBuffer","Float32Array","rainIndices","Uint16Array","valueOrDefault","value","defaultValue","undefined","resolve","object","key","first","split","rest","slice","length","replace","Array","isArray","match","format","text","dict","matches","disposeMesh","mesh","geometry","dispose","loadTile","tile","callback","this","constructor","prototype","call","err","x","y","z","tileID","canonical","position","texture","layer","_parentLayer","tileDict","_tileDict","gl","map","painter","context","fb","createFramebuffer","width","height","size","pixels","Uint8Array","dbz","_dbz","mercatorBounds","_mercatorBounds","n","Math","pow","lng1","lat1","atan","sinh","PI","lng2","lat2","coord1","fromLngLat","coord2","dx","dy","getMercatorBounds","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","RGBA","UNSIGNED_BYTE","deleteFramebuffer","_colors","colors","color","parseInt","i","j","group","_zoomGroups","boxMesh","scaleColors","material","factor","resolutionX","floor","resolutionY","threshold","instances","level","p","push","matrix","makeScale","setPosition","setMatrixAt","setColorAt","scale","max","updateMatrix","matrixAutoUpdate","renderOrder","createBoxMesh","_scaleColors","_meshMaterial","_boxMesh","add","rainMesh","instancedBufferGeometry","positions","setAttribute","setIndex","rainOffsetBuffer","offsets","setXYZ","random","frustumCulled","createRainMesh","_rainMaterial","_rainMesh","unloadTile","parent","remove","RainLayer","options","super","id","type","renderingMode","minzoom","maxzoom","source","rainColor","meshOpacity","repaint","_interval","sources","interval","_onZoom","bind","onAdd","_parseColor","clearColor","default","parse","_scene","_camera","_directionalLight","set","normalize","_ambientLight","opacity","transparent","r","g","b","a","uniforms","time","vertexShader","fragmentShader","side","_baseZoom","round","getZoom","visible","align","scales","index","array","Infinity","_map","setLayerZoomRange","on","_renderer","canvas","getCanvas","antialias","autoClear","_refreshSource","_timer","setInterval","onRemove","off","_removeSource","clearInterval","render","zoom","performance","now","projectionMatrix","fromArray","resetState","triggerRepaint","sourceId","tiles","tileSize","attribution","catalog","timestamp","fetch","then","response","json","data","addSource","getSource","addLayer","paint","fire","removeLayer","removeSource","setRainColor","setMeshOpacity","getLegendHTML","reverse","item","join","addColor","url","encodedColor","PrecipitationPlugin","me","name","en","ja","ko","ne","th","iconStyle","backgroundSize","backgroundImage","clockModes","viewModes","_onRefresh","onEnabled","onDisabled","onVisibilityChanged","setLayerVisibility","hasDarkBackground"],"mappings":"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"}